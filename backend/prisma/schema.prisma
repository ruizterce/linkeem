generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid())
  githubId       String?  @unique
  email          String?  @unique
  username       String   @unique
  password       String? // Hashed password
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Relationships
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  followers Follow[]  @relation("followers")
  following Follow[]  @relation("following")

  @@map("users")
}

model Post {
  id        String   @id @default(cuid())
  content   String
  imgUrl    String?
  createdAt DateTime @default(now())
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])

  // Relationships
  comments Comment[]
  likes    Like[]

  @@map("posts")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  createdAt DateTime @default(now())
  postId    String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])

  @@map("comments")
}

model Like {
  id     String @id @default(cuid())
  postId String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])

  @@unique([postId, userId]) // A user can like a post only once
  @@map("likes")
}

model Follow {
  id          String   @id @default(cuid())
  followerId  String
  followingId String
  follower    User     @relation("following", fields: [followerId], references: [id])
  following   User     @relation("followers", fields: [followingId], references: [id])
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId]) // Prevent duplicate follow requests
  @@map("follows")
}
